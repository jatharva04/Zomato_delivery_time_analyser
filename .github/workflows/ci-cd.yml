# Name for your GitHub Actions workflow
name: CI/CD Pipeline for Zomato API

# 1. Define the trigger for this workflow
on:
  # Run this workflow every time code is pushed to the 'main' branch
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# 2. Define the jobs that will run
jobs:
  # Define a single job named 'build-and-test'
  build-and-test:
    # Use the latest version of Ubuntu as the runner environment
    runs-on: ubuntu-latest

    # 3. Define the sequence of steps for this job
    steps:
      # Step 1: Check out your repository code
      # This is a standard action that downloads your code to the runner
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx (required for building)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # Step 3: Lint the Python code for style errors
      # This is a basic quality check
      - name: Lint with flake8
        run: |
          pip install flake8
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Step 4: Build the Docker image
      # This is the main build step, using the Dockerfile you created
      - name: Build Docker image
        run: docker build -t zomato-api .